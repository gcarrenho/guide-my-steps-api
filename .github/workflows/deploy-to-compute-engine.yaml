name: cd

on:
  push:
    branches:
     - master

  pull_request:
    types: [ labeled ] 


jobs:
  buil-and-push-docker-img:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' || github.event.label.name == 'deploy-staging' }}
    steps:
      -
       name: Checkout
       uses: actions/checkout@v3
      -
       name: Docker meta
       id: meta
       uses: docker/metadata-action@v4
       with:
      # list of Docker images to use as base name for tags
        images: |
         gcarreno/guide-my-steps
         ghcr.io/gcarrenho/guide-my-steps-api
        flavor: latest=true
        # generate Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=sha
         #type=semver,pattern={{major}}.{{minor}}
         #        type=semver,pattern={{major}}
      -
       name: Set up QEMU
       uses: docker/setup-qemu-action@v2
      -
       name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2
      -
       name: Login to Docker Hub
       uses: docker/login-action@v2
       with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
       name: Login to GHCR
       uses: docker/login-action@v2
       with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.MYTOKEN }}
      -
       name: Build and push
       uses: docker/build-push-action@v4
       with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-img-to-gcpvm:
    runs-on: ubuntu-latest
    needs:  buil-and-push-docker-img

    # Add "id-token" with the intended permissions
    permissions:
        contents: 'read'
        id-token: 'write'

    steps:
      - 
       name: Checkout repository
       uses: actions/checkout@v3

      - 
       id: 'auth'
       name: 'Authenticate to Google Cloud'
       uses: 'google-github-actions/auth@v1'
       with:
          workload_identity_provider: 'projects/98843203215/locations/global/workloadIdentityPools/guide-my-steps-pool/providers/guide-my-steps-provider'
          service_account: 'github-action@guide-my-steps.iam.gserviceaccount.com'

      - 
       name: 'Set up Cloud SDK'
       uses: 'google-github-actions/setup-gcloud@v1'
        #with:
         #version: '>= 363.0.0'

      -
       name: Login to GHCR
       uses: docker/login-action@v2
       with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.MYTOKEN }}

      - name: Pull and run container
        run: |
          docker pull ghcr.io/gcarrenho/guide-my-steps-api:${{ github.sha }}
          docker run -d --name guide-my-steps ghcr.io/gcarrenho/guide-my-steps-api:${{ github.sha }}

      - 
        name: Assign instance
        id: assign_instance
        run: |
         if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/master" ]; then
          echo "::set-output name=instance::production-1"
         elif [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "::set-output name=instance::testvmcontainer-1"
         fi
  
      #- 
      # name: Deploy container to Compute Engine
      # run: |
      #  gcloud compute instances update-container ${{ steps.assign_instance.outputs.instance }} \
      #    --container-image ghcr.io/gcarrenho/guide-my-steps-api:${{ github.sha }} \
      #    --zone us-central1-a


      - 
        name: Despliegue de la imagen en la VM
        run: |
         gcloud compute ssh  ${{ steps.assign_instance.outputs.instance }} --zone us-central1-a --project guide-my-steps --command "
         docker pull ghcr.io/gcarrenho/guide-my-steps-api:latest
         docker run -d --name guide-my-steps -p 8080:8080 ghcr.io/gcarrenho/guide-my-steps-api/guide-my-steps:latest"
		