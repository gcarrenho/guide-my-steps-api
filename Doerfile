# syntax=docker/dockerfile:1

########################################
### BASE IMAGE #########################
########################################

# Choosing golang alpine due to small footprint
ARG GO_VERSION=1.19
FROM golang:${GO_VERSION}-alpine AS base

ENV CGO_ENABLED=0 \
    GIN_MODE=release

# Update the docker packages to avoid possible Anchore issues.
RUN apk -U upgrade

# Go packages setup
WORKDIR $GOPATH/src
COPY . .
RUN go install ./...

# Build
COPY . .
RUN gofmt -w -s . && \
    CGO_ENABLED=${CGO_ENABLED} GIN_MODE=${GIN_MODE} go build -o main src/cmd/main.go


########################################
### PRODUCTION #########################
########################################

FROM alpine:latest AS production

# Declare variables to be used in docker
ARG USER_UID=1002
ARG USER_GID=${USER_UID}

RUN mkdir -p /go/src/app/config

# Update the docker packages to avoid possible Anchore issues.
RUN apk -U upgrade

COPY --from=base /go/src/main /go/src


RUN chown -R ${USER_UID} /go/src 

# Required. Run service as non-root.
USER ${USER_UID}

ENTRYPOINT [ "/go/src/main"]
